import { createConfig, http } from 'wagmi'
import { mainnet, sepolia, polygon, arbitrum, optimism, base } from 'wagmi/chains'
import { metaMask, walletConnect, coinbaseWallet, injected } from 'wagmi/connectors'

// Define chains for Wagmi config (this is separate from AppKit networks)
const chains = [mainnet, sepolia, polygon, arbitrum, optimism, base]

// Get project ID from Nuxt runtime config
export const projectId = '2585d3b6fd8a214ece0e26b344957169' // From nuxt.config.ts

console.log('ðŸ”§ Wagmi Config - Project ID:', projectId)

// Create Wagmi config with proper connectors
export const wagmiConfig = createConfig({
  chains,
  connectors: [
    // Injected connector for general browser wallets
    injected(),
    // Specific MetaMask connector
    metaMask({
      dappMetadata: {
        name: 'Circular CIRX Swap',
        url: process.env.NUXT_PUBLIC_APP_URL || 'http://localhost:3000',
        iconUrl: '/images/logo/PNG/abstract-icon-white-png.png',
      }
    }),
    // WalletConnect for mobile wallets
    walletConnect({ 
      projectId,
      metadata: {
        name: 'Circular CIRX Swap',
        description: 'OTC Trading Platform for CIRX tokens',
        url: process.env.NUXT_PUBLIC_APP_URL || 'http://localhost:3000',
        icons: ['/images/logo/PNG/abstract-icon-white-png.png']
      }
    }),
    // Coinbase Wallet
    coinbaseWallet({
      appName: 'Circular CIRX Swap',
      appLogoUrl: '/images/logo/PNG/abstract-icon-white-png.png',
    }),
  ],
  transports: {
    [mainnet.id]: http(),
    [sepolia.id]: http('https://rpc.sepolia.ethpandaops.io'), // Use more reliable Sepolia RPC
    [polygon.id]: http(),
    [arbitrum.id]: http(),
    [optimism.id]: http(),
    [base.id]: http(),
  },
})

// Metadata for AppKit
export const metadata = {
  name: 'Circular CIRX Swap',
  description: 'OTC Trading Platform for CIRX tokens',
  url: process.env.NUXT_PUBLIC_APP_URL || 'http://localhost:3000',
  icons: ['/images/logo/PNG/abstract-icon-white-png.png']
}