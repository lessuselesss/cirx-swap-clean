version: '3.8'

services:
  # IROH networking bridge
  iroh-bridge:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: cirx-iroh-bridge
    ports:
      - "9090:9090"      # HTTP bridge API
      - "3478:3478/udp"  # STUN port for relay
    volumes:
      - ./config:/app/config:ro
      - iroh-data:/app/data
    environment:
      - RUST_LOG=iroh_bridge=info,iroh=info
      - IROH_SECRET_KEY=${IROH_SECRET_KEY:-}
      - IROH_RELAY_URL=${IROH_RELAY_URL:-}
    networks:
      - cirx-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Backend PHP service with IROH integration
  backend:
    build: 
      context: ../backend
      dockerfile: Dockerfile
    container_name: cirx-backend
    ports:
      - "8080:8080"
    volumes:
      - ../backend:/var/www/html
      - ../backend/.env:/var/www/html/.env:ro
    environment:
      - IROH_ENABLED=true
      - IROH_BRIDGE_URL=http://iroh-bridge:9090
      - DB_HOST=db
      - DB_DATABASE=cirx_otc
      - DB_USERNAME=cirx_user
      - DB_PASSWORD=cirx_password
    depends_on:
      - db
      - iroh-bridge
    networks:
      - cirx-network
    restart: unless-stopped

  # Frontend Nuxt.js service
  frontend:
    build: 
      context: ../ui
      dockerfile: Dockerfile
    container_name: cirx-frontend
    ports:
      - "3000:3000"
    volumes:
      - ../ui:/app
      - /app/node_modules
    environment:
      - NUXT_PUBLIC_IROH_ENABLED=true
      - NUXT_PUBLIC_IROH_BRIDGE_URL=http://localhost:9090
      - NUXT_PUBLIC_API_URL=http://localhost:8080/api/v1
    depends_on:
      - backend
      - iroh-bridge
    networks:
      - cirx-network
    restart: unless-stopped

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    container_name: cirx-database
    environment:
      - POSTGRES_DB=cirx_otc
      - POSTGRES_USER=cirx_user  
      - POSTGRES_PASSWORD=cirx_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../testing/data/e2e-setup.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - cirx-network
    restart: unless-stopped

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: cirx-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - cirx-network
    restart: unless-stopped

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  iroh-data:
    driver: local

networks:
  cirx-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16